{"ast":null,"code":"var _jsxFileName = \"/root/Local-Service-Platform-SQLITE/client/src/components/AddNewService.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewService = ({\n  onAddService\n}) => {\n  _s();\n  const [newServiceName, setNewServiceName] = useState('');\n  const [services, setServices] = useState([]);\n  const handleAddService = () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n    const newService = {\n      id: Date.now(),\n      // Unique ID, you can generate it as needed\n      name: newServiceName\n    };\n    setServices(prevServices => [...prevServices, newService]); // Add the new service to the list of services\n    onAddService(newService); // Call the onAddService callback to add the new service\n    setNewServiceName(''); // Clear the input field after adding the service\n  };\n  const handleDeleteService = id => {\n    setServices(prevServices => prevServices.filter(service => service.id !== id)); // Filter out the service with the provided ID\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Add New Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter service name\",\n      value: newServiceName,\n      onChange: e => setNewServiceName(e.target.value),\n      className: \"block w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddService,\n      className: \"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-2\",\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: service.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteService(service.id),\n        className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, service.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewService, \"4EoSfrCi8NLmCeIYuKFOF2UgWgo=\");\n_c = AddNewService;\nexport default AddNewService;\nvar _c;\n$RefreshReg$(_c, \"AddNewService\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddNewService","onAddService","_s","newServiceName","setNewServiceName","services","setServices","handleAddService","trim","alert","newService","id","Date","now","name","prevServices","handleDeleteService","filter","service","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/root/Local-Service-Platform-SQLITE/client/src/components/AddNewService.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddNewService = ({ onAddService }) => {\n  const [newServiceName, setNewServiceName] = useState('');\n  const [services, setServices] = useState([]);\n\n  const handleAddService = () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n\n    const newService = {\n      id: Date.now(), // Unique ID, you can generate it as needed\n      name: newServiceName\n    };\n\n    setServices(prevServices => [...prevServices, newService]); // Add the new service to the list of services\n    onAddService(newService); // Call the onAddService callback to add the new service\n    setNewServiceName(''); // Clear the input field after adding the service\n  };\n\n  const handleDeleteService = (id) => {\n    setServices(prevServices => prevServices.filter(service => service.id !== id)); // Filter out the service with the provided ID\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-8\">\n      <h2 className=\"text-2xl font-bold mb-4\">Add New Service</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter service name\"\n        value={newServiceName}\n        onChange={e => setNewServiceName(e.target.value)}\n        className=\"block w-full mb-2 p-2 border rounded\"\n      />\n      <button\n        onClick={handleAddService}\n        className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-2\"\n      >\n        Add Service\n      </button>\n      {/* Render delete buttons for newly added services */}\n      {services.map(service => (\n        <div key={service.id} className=\"flex items-center mt-2\">\n          <span className=\"mr-2\">{service.name}</span>\n          <button onClick={() => handleDeleteService(service.id)} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded\">Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AddNewService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}