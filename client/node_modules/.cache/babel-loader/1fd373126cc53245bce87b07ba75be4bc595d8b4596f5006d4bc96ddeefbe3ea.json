{"ast":null,"code":"var _jsxFileName = \"/root/Local-Service-Platform-SQLITE/client/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // State variable to track the current theme\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Function to toggle between light and dark themes\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // CSS classes for dark mode\n  const darkModeClass = darkMode ? 'dark' : '';\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: `py-6 px-4 sm:p-6 md:py-10 md:px-8 ${darkModeClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-4xl mx-auto grid grid-cols-1 lg:max-w-5xl lg:gap-x-20 lg:grid-cols-2 ${darkModeClass}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"fixed bottom-4 right-4 bg-gray-800 text-white px-3 py-2 rounded-full\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","darkMode","setDarkMode","toggleDarkMode","darkModeClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/root/Local-Service-Platform-SQLITE/client/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Home = () => {\n  // State variable to track the current theme\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Function to toggle between light and dark themes\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // CSS classes for dark mode\n  const darkModeClass = darkMode ? 'dark' : '';\n\n  return (\n    <main className={`py-6 px-4 sm:p-6 md:py-10 md:px-8 ${darkModeClass}`}>\n      {/* Add the dark mode class to the main container */}\n      <div className={`max-w-4xl mx-auto grid grid-cols-1 lg:max-w-5xl lg:gap-x-20 lg:grid-cols-2 ${darkModeClass}`}>\n        {/* Content goes here */}\n      </div>\n      {/* Button to toggle dark mode */}\n      <button\n        type=\"button\"\n        className=\"fixed bottom-4 right-4 bg-gray-800 text-white px-3 py-2 rounded-full\"\n        onClick={toggleDarkMode}\n      >\n        {darkMode ? 'Light Mode' : 'Dark Mode'}\n      </button>\n    </main>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGH,QAAQ,GAAG,MAAM,GAAG,EAAE;EAE5C,oBACEH,OAAA;IAAMO,SAAS,EAAG,qCAAoCD,aAAc,EAAE;IAAAE,QAAA,gBAEpER,OAAA;MAAKO,SAAS,EAAG,8EAA6ED,aAAc;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzG,CAAC,eAENZ,OAAA;MACEa,IAAI,EAAC,QAAQ;MACbN,SAAS,EAAC,sEAAsE;MAChFO,OAAO,EAAET,cAAe;MAAAG,QAAA,EAEvBL,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACV,EAAA,CA5BID,IAAI;AAAAc,EAAA,GAAJd,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}