{"ast":null,"code":"var _jsxFileName = \"/root/Local-Service-Platform-SQLITE/client/src/components/AddNewService.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewService = ({\n  onAddService\n}) => {\n  _s();\n  const [newServiceName, setNewServiceName] = useState('');\n  const handleAddService = () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n    const newService = {\n      id: Date.now(),\n      // Unique ID, you can generate it as needed\n      name: newServiceName\n    };\n    onAddService(newService); // Call the onAddService callback to add the new service\n    setNewServiceName(''); // Clear the input field after adding the service\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Add New Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter service name\",\n      value: newServiceName,\n      onChange: e => setNewServiceName(e.target.value),\n      className: \"block w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddService,\n      className: \"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewService, \"zYX3mznFM9SM7WwaiXZeHUG6QNQ=\");\n_c = AddNewService;\nexport default AddNewService;\nvar _c;\n$RefreshReg$(_c, \"AddNewService\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddNewService","onAddService","_s","newServiceName","setNewServiceName","handleAddService","trim","alert","newService","id","Date","now","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/root/Local-Service-Platform-SQLITE/client/src/components/AddNewService.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddNewService = ({ onAddService }) => {\n  const [newServiceName, setNewServiceName] = useState('');\n\n  const handleAddService = () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n\n    const newService = {\n      id: Date.now(), // Unique ID, you can generate it as needed\n      name: newServiceName\n    };\n\n    onAddService(newService); // Call the onAddService callback to add the new service\n    setNewServiceName(''); // Clear the input field after adding the service\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-8\">\n      <h2 className=\"text-2xl font-bold mb-4\">Add New Service</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter service name\"\n        value={newServiceName}\n        onChange={e => setNewServiceName(e.target.value)}\n        className=\"block w-full mb-2 p-2 border rounded\"\n      />\n      <button\n        onClick={handleAddService}\n        className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n      >\n        Add Service\n      </button>\n    </div>\n  );\n};\n\nexport default AddNewService;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIF,cAAc,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAChCC,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,IAAI,EAAET;IACR,CAAC;IAEDF,YAAY,CAACO,UAAU,CAAC,CAAC,CAAC;IAC1BJ,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAElB,cAAe;MACtBmB,QAAQ,EAAEC,CAAC,IAAInB,iBAAiB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDR,SAAS,EAAC;IAAsC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFnB,OAAA;MACE0B,OAAO,EAAEpB,gBAAiB;MAC1BQ,SAAS,EAAC,+EAA+E;MAAAC,QAAA,EAC1F;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}