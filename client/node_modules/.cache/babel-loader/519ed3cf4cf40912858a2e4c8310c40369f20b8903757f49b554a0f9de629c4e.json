{"ast":null,"code":"var _jsxFileName = \"/root/Local-Service-Platform-SQLITE/client/src/components/AddService.js\",\n  _s = $RefreshSig$();\n// AddService.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddService = ({\n  onAddService\n}) => {\n  _s();\n  const [newServiceName, setNewServiceName] = useState('');\n  const handleAddService = async () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n    try {\n      // Make a POST request to add the new service\n      const response = await fetch('/services', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newServiceName\n        })\n      });\n      if (response.ok) {\n        const newService = await response.json();\n        onAddService(newService);\n        setNewServiceName('');\n      } else {\n        console.error('Failed to add new service');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Add New Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter service name\",\n      value: newServiceName,\n      onChange: e => setNewServiceName(e.target.value),\n      className: \"block w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddService,\n      className: \"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AddService, \"zYX3mznFM9SM7WwaiXZeHUG6QNQ=\");\n_c = AddService;\nexport default AddService;\nvar _c;\n$RefreshReg$(_c, \"AddService\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddService","onAddService","_s","newServiceName","setNewServiceName","handleAddService","trim","alert","response","fetch","method","headers","body","JSON","stringify","name","ok","newService","json","console","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/root/Local-Service-Platform-SQLITE/client/src/components/AddService.js"],"sourcesContent":["// AddService.js\nimport React, { useState } from 'react';\n\nconst AddService = ({ onAddService }) => {\n  const [newServiceName, setNewServiceName] = useState('');\n\n  const handleAddService = async () => {\n    if (newServiceName.trim() === '') {\n      alert('Please enter a service name');\n      return;\n    }\n\n    try {\n      // Make a POST request to add the new service\n      const response = await fetch('/services', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: newServiceName }),\n      });\n      if (response.ok) {\n        const newService = await response.json();\n        onAddService(newService);\n        setNewServiceName('');\n      } else {\n        console.error('Failed to add new service');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold mb-4\">Add New Service</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter service name\"\n        value={newServiceName}\n        onChange={e => setNewServiceName(e.target.value)}\n        className=\"block w-full mb-2 p-2 border rounded\"\n      />\n      <button\n        onClick={handleAddService}\n        className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n      >\n        Add Service\n      </button>\n    </div>\n  );\n};\n\nexport default AddService;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIF,cAAc,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAChCC,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEZ;QAAe,CAAC;MAC/C,CAAC,CAAC;MACF,IAAIK,QAAQ,CAACQ,EAAE,EAAE;QACf,MAAMC,UAAU,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACxCjB,YAAY,CAACgB,UAAU,CAAC;QACxBb,iBAAiB,CAAC,EAAE,CAAC;MACvB,CAAC,MAAM;QACLe,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAIuB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5D3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAE1B,cAAe;MACtB2B,QAAQ,EAAEC,CAAC,IAAI3B,iBAAiB,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDP,SAAS,EAAC;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF3B,OAAA;MACEkC,OAAO,EAAE5B,gBAAiB;MAC1BiB,SAAS,EAAC,+EAA+E;MAAAD,QAAA,EAC1F;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhDIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}